[build-system]
requires = [
    "setuptools>=61.0",
    "wheel>=0.37.0",
    "build>=0.8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "gasm-roboting"
version = "0.1.0"
description = "Geometric Agent Swarm Models with Robotic Integration"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Versino PsiOmega GmbH", email = "dev@versino-psiomega.com"},
]
maintainers = [
    {name = "Versino PsiOmega GmbH", email = "dev@versino-psiomega.com"},
]
keywords = [
    "geometric-deep-learning",
    "se3-invariance", 
    "spatial-reasoning",
    "robotics",
    "agent-swarms",
    "attention-mechanisms",
    "differential-geometry",
    "pytorch",
    "transformer-models"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pillow>=8.0.0",
    "psutil>=5.9.0",
    "setuptools>=61.0",
]

[project.optional-dependencies]
geometric = [
    "torch-geometric>=2.4.0",
    "geomstats>=2.7.0",
]
nlp = [
    "transformers>=4.21.0",
    "spacy>=3.7.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "gradio>=4.16.0",
    "spaces>=0.19.0",
]
visualization = [
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "imageio>=2.19.0",
    "imageio-ffmpeg>=0.4.0",
]
robotics = [
    "pybullet>=3.2.0",
    "opencv-python>=4.7.0",
]
vision = [
    "opencv-python>=4.7.0",
    "pillow>=8.0.0",
    "scikit-image>=0.19.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]
all = [
    "torch-geometric>=2.4.0",
    "geomstats>=2.7.0",
    "transformers>=4.21.0",
    "spacy>=3.7.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "gradio>=4.16.0",
    "spaces>=0.19.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "imageio>=2.19.0",
    "imageio-ffmpeg>=0.4.0",
    "pybullet>=3.2.0",
    "opencv-python>=4.7.0",
    "scikit-image>=0.19.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/versino-psiomega/olympus"
Documentation = "https://versino-psiomega.github.io/olympus/gasm/"
Repository = "https://github.com/versino-psiomega/olympus.git"
"Bug Tracker" = "https://github.com/versino-psiomega/olympus/issues"
Changelog = "https://github.com/versino-psiomega/olympus/blob/main/GASM/CHANGELOG.md"

[project.scripts]
gasm-agent-2d = "spatial_agent.agent_loop_2d:main"
gasm-agent-3d = "spatial_agent.agent_loop_pybullet:main"
gasm-demo = "spatial_agent.demo:main"
gasm-server = "api.main:main"
gasm-setup = "scripts.setup_environment:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
spatial_agent = ["*.json", "objects/*.urdf"]
gasm = ["*.json"]
"*" = ["*.md", "*.txt", "*.yaml", "*.yml"]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | venv
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gasm", "spatial_agent", "api"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "matplotlib.*",
    "scipy.*",
    "sklearn.*",
    "cv2.*",
    "pybullet.*",
    "geomstats.*",
    "torch_geometric.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gpu: marks tests that require GPU",
    "vision: marks tests that require computer vision libraries",
    "robotics: marks tests that require robotics libraries",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 linting
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]